/*
 *  Copyright (c) 2019 by Adequate Systems, LLC. All Rights Reserved.
 *
 *  See LICENSE.PDF https://github.com/mochimodev/mochimo/blob/master/LICENSE.PDF
 *
 *  **** NO WARRANTY ****
 *
 */
/*
 * To change this license header, choose License Headers in Project Properties. To change this template file, choose Tools | Templates and open the template in the editor.
 */

package io.ortis.jsafebox.gui;


import io.ortis.jsafebox.gui.tasks.GUITask;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;
import java.util.logging.LogRecord;


/**
 * @author Ortis
 */
public class ProgressFrame extends javax.swing.JDialog implements WindowListener// javax.swing.JFrame
{
	private final static long ICON_HEARTBEAT = 700;

	private final Window parent;
	private final List<ImageIcon> progressIcons = new ArrayList<>();
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JLabel loadingIconLabel;
	private javax.swing.JPanel mainPanel;

	/**
	 * Creates new form ProgressFrame
	 */
	private ProgressFrame()
	{
		this.parent = null;
		setUndecorated(true);
		setModal(true);
		initComponents();
		loadIcons();

		final Settings settings = Settings.getSettings();

		mainPanel.setBackground(settings.getColorTheme().getBackgroundColor());
		jPanel2.setBackground(settings.getColorTheme().getLeftPanelBackgroundColor());
		jTextArea1.setBackground(settings.getColorTheme().getBackgroundColor());
		setBackground(settings.getColorTheme().getBackgroundColor());

		settings.applyHeaderLabelStyle(this.jLabel2);

		addWindowListener(this);

	}

	public ProgressFrame(final Window parent)
	{
		super(parent);
		this.parent = parent;
		// setUndecorated(true);
		setModal(true);
		setResizable(false);
		initComponents();
		loadIcons();

		final Settings settings = Settings.getSettings();

		mainPanel.setBackground(settings.getColorTheme().getBackgroundColor());

		jPanel2.setFont(settings.getFontTheme().getHeaderFont());
		jPanel2.setBackground(settings.getColorTheme().getLeftPanelBackgroundColor());

		jTextArea1.setFont(settings.getFontTheme().getFieldFont());
		jTextArea1.setBackground(settings.getColorTheme().getBackgroundColor());

		setBackground(settings.getColorTheme().getBackgroundColor());

		addWindowListener(this);
		setLocationRelativeTo(parent);
		setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

	}

	private void loadIcons()
	{
		loadingIconLabel.setIcon(null);
		for(final Image img : Settings.getSettings().getProgressIcons())
		{
			final ImageIcon icon = new ImageIcon(img);

			if(loadingIconLabel.getIcon() == null)
				loadingIconLabel.setIcon(icon);

			progressIcons.add(icon);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		mainPanel = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		loadingIconLabel = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();

		mainPanel.setBackground(new java.awt.Color(45, 58, 79));

		jPanel2.setBackground(new java.awt.Color(22, 28, 38));

		loadingIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

		jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(115, 122, 133));
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("Processing wallet");

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(loadingIconLabel).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE).addGap(44,
						44, 44)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
						javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(loadingIconLabel,
				javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		jScrollPane1.setBorder(null);
		jScrollPane1.setViewportBorder(null);

		jTextArea1.setEditable(false);
		jTextArea1.setBackground(new java.awt.Color(45, 58, 79));
		jTextArea1.setColumns(20);
		jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
		jTextArea1.setRows(5);
		jTextArea1.setBorder(null);
		jScrollPane1.setViewportView(jTextArea1);

		javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
		mainPanel.setLayout(mainPanelLayout);
		mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1).addComponent(jPanel2,
				javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		mainPanelLayout.setVerticalGroup(
				mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(mainPanelLayout.createSequentialGroup().addComponent(jPanel2,
						javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)));

		getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	public void execute(final GUITask task)
	{

		final String mainMessage = task.getProcessingHeader();
		SwingUtilities.invokeLater(new Runnable()
		{

			@Override
			public void run()
			{

				jLabel2.setText(mainMessage);
			}
		});

		new SwingWorker<Void, LogRecord>()
		{

			@Override
			protected Void doInBackground() throws Exception
			{

				final Consumer<LogRecord> callback = new Consumer<LogRecord>()
				{
					@Override
					public void accept(final LogRecord record)
					{
						publish(record);
					}
				};

				task.start(callback);

				while(!task.isTerminated())
					Thread.sleep(500);

				return null;
			}

			@Override
			protected void process(final List<LogRecord> messages)
			{

				for(final LogRecord logRecord : messages)
					ProgressFrame.this.jTextArea1.append(logRecord.getMessage() + "\n");
			}

			protected void done()
			{
				dispose();

				SwingUtilities.invokeLater(new Runnable()
				{
					@Override
					public void run()
					{
						new ResultFrame(ProgressFrame.this.parent, task);
					}
				});
			}

		}.execute();

		this.setVisible(true);

	}
	// End of variables declaration//GEN-END:variables

	@Override
	public void windowOpened(WindowEvent e)
	{
		if(progressIcons.size() > 1)
			new Thread()
			{
				public void run()
				{
					int index = 0;
					try
					{

						while(ProgressFrame.this.isVisible())
						{
							Thread.sleep(ICON_HEARTBEAT);

							if(index >= progressIcons.size())
								index = 0;

							loadingIconLabel.setIcon(progressIcons.get(index++));
						}
					} catch(final InterruptedException e)
					{

					}
				}

			}.start();
	}

	@Override
	public void windowClosing(WindowEvent e)
	{
	}

	@Override
	public void windowClosed(WindowEvent e)
	{
	}

	@Override
	public void windowIconified(WindowEvent e)
	{
	}

	@Override
	public void windowDeiconified(WindowEvent e)
	{
	}

	@Override
	public void windowActivated(WindowEvent e)
	{

	}

	@Override
	public void windowDeactivated(WindowEvent e)
	{

	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try
		{
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch(ClassNotFoundException ex)
		{
			java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch(InstantiationException ex)
		{
			java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch(IllegalAccessException ex)
		{
			java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch(javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(ProgressFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new ProgressFrame().setVisible(true);
			}
		});
	}
}
